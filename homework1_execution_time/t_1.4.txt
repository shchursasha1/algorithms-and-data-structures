a)
T(n) = | 1,            n <= a, a > 0
       | T(n - a) + 1, n > a

T(n) = T(n - a) + 1 =
     = T(n - 2 a) + 2 =
     = T(n - 3 a) + 3 =
     = ... =
     = T(n - k a) + k =

end: n - k a <= a -> -k a <= a - n -> -k <= 1 - ceil(n / a) -> k >= ceil(n / a) - 1

     = 1 + ceil(n / a) - 1 = ceil(n / a)

b)
T(n) = | 1,              n = 0
       | T(n - 1) + 2^n, n >= 1

T(n) = T(n - 1) + 2^n =
     = T(n - 2) + 2^n + 2^(n - 1) =
     = T(n - 3) + 2^n + 2^(n - 1) + 2^(n - 2) =
     = ... =
     = T(n - n) + (2^1 + 2^2 + ... + 2^n) =
     = 1 + (2^1 + 2^2 + ... + 2^n) =
     = 1 + 2^(n + 1) - 2 = 2^(n + 1) - 1

c)
T(n) = | 1,               n = 1
       | 2T([n / 2]) + 1, n >= 2

T(n) = 2T([n / 2]) + 1 =
     = 2(2T([n / 4]) + 1) + 1 = 4T([n / 4]) + 2 + 1 =
     = 4(2T([n / 8]) + 1) + 2 + 1 = 8T([n / 8]) + 4 + 2 + 1 =
     = ... =
     = 2^k T([n / 2^k]) + (1 + 2 + 4 + ... + 2^(k - 2) + 2^(k - 1)) =

end: [n / 2^k] = 1 -> k = log2(n)

     = 2^log2(n) T(1) + (2^log2(n) - 1) = 2^log2(n) + 2^(log2(n)) - 1 = 2 * 2^log2(n) - 1 =
     = 2 n - 1

d)
T(n) = | 1,               n = 1
       | aT([n / a]) + n, n >= 2, a >= 2

T(n) = aT([n / a]) + n =
     = ... =
     = a^k T([n / a^k]) + (n + (n / a) + (n / a^2) + ... + (n / a^(k - 1))) =

end: [n / a^k] = 1 -> k = log_a(n)

     = n log_a(n) + n = n (log_a(n) + 1)
